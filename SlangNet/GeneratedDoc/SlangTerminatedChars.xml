<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
  <namespace name="SlangNet.Bindings.Generated.Slang">
    <struct name="SlangTerminatedChars" access="public" uuid="be0db1a8-3594-4603-a78b-c4868430dfbb">
      <field name="chars" access="public">
        <type native="char[1]" count="1" fixed="_chars_e__FixedBuffer">sbyte</type>
      </field>
      <struct name="_chars_e__FixedBuffer" access="public">
        <field name="e0" access="public">
          <type>sbyte</type>
        </field>
        <indexer access="public">
          <type>ref sbyte</type>
          <param name="index">
            <type>int</type>
          </param>
          <get inlining="aggressive">
            <code>return ref Unsafe.Add(ref e0, index);</code>
          </get>
        </indexer>
        <function name="AsSpan" access="public">
          <type>Span&lt;sbyte&gt;</type>
          <param name="length">
            <type>int</type>
          </param>
          <code>MemoryMarshal.CreateSpan(ref e0, length);</code>
        </function>
      </struct>
    </struct>
  </namespace>
</bindings>
