<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
  <namespace name="SlangNet.Bindings.Generated">
    <struct name="SpecializationArg" access="public" unsafe="true">
      <field name="kind" access="public">
        <type native="slang::SpecializationArg::Kind">TypeKind</type>
      </field>
      <field name="Anonymous" access="public">
        <type native="__AnonymousRecord_slang_L4650_C5">_Anonymous_e__Union</type>
      </field>
      <field name="type" access="public">
        <type>ref TypeReflection*</type>
        <get inlining="aggressive">
          <code>return ref Anonymous.type;</code>
        </get>
      </field>
      <field name="expr" access="public">
        <type>ref sbyte*</type>
        <get inlining="aggressive">
          <code>return ref Anonymous.expr;</code>
        </get>
      </field>
      <enumeration name="TypeKind" access="public">
        <type>int</type>
        <enumerator name="Unknown" access="public">
          <type primitive="False">int</type>
        </enumerator>
        <enumerator name="Type" access="public">
          <type primitive="False">int</type>
        </enumerator>
        <enumerator name="Expr" access="public">
          <type primitive="False">int</type>
        </enumerator>
      </enumeration>
      <struct name="_Anonymous_e__Union" access="public" unsafe="true" layout="Explicit">
        <field name="type" access="public" offset="0">
          <type native="slang::TypeReflection *">TypeReflection*</type>
        </field>
        <field name="expr" access="public" offset="0">
          <type native="const char *">sbyte*</type>
        </field>
      </struct>
    </struct>
  </namespace>
</bindings>
