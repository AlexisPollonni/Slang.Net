<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<bindings>
  <namespace name="SlangNet.Bindings.Generated">
    <struct name="ISlangProfiler" access="public" native="struct ISlangProfiler : ISlangUnknown" parent="ISlangUnknown" uuid="197772c7-0155-4b91-84e8-6668baff0619" vtbl="true" unsafe="true">
      <field name="lpVtbl" access="public">
        <type>Vtbl*</type>
      </field>
      <delegate name="_queryInterface" access="public" convention="ThisCall" unsafe="true">
        <type native="SlangResult">int</type>
        <param name="pThis">
          <type>ISlangProfiler*</type>
        </param>
        <param name="uuid">
          <type>SlangUUID*</type>
        </param>
        <param name="outObject">
          <type>void**</type>
        </param>
      </delegate>
      <delegate name="_addRef" access="public" convention="ThisCall">
        <type native="uint32_t">uint</type>
        <param name="pThis">
          <type>ISlangProfiler*</type>
        </param>
      </delegate>
      <delegate name="_release" access="public" convention="ThisCall">
        <type native="uint32_t">uint</type>
        <param name="pThis">
          <type>ISlangProfiler*</type>
        </param>
      </delegate>
      <delegate name="_getEntryCount" access="public" convention="ThisCall">
        <type native="size_t">nuint</type>
        <param name="pThis">
          <type>ISlangProfiler*</type>
        </param>
      </delegate>
      <delegate name="_getEntryName" access="public" convention="ThisCall" unsafe="true">
        <type native="const char *">sbyte*</type>
        <param name="pThis">
          <type>ISlangProfiler*</type>
        </param>
        <param name="index">
          <type>uint</type>
        </param>
      </delegate>
      <delegate name="_getEntryTimeMS" access="public" convention="ThisCall">
        <type native="long">nint</type>
        <param name="pThis">
          <type>ISlangProfiler*</type>
        </param>
        <param name="index">
          <type>uint</type>
        </param>
      </delegate>
      <delegate name="_getEntryInvocationTimes" access="public" convention="ThisCall">
        <type native="uint32_t">uint</type>
        <param name="pThis">
          <type>ISlangProfiler*</type>
        </param>
        <param name="index">
          <type>uint</type>
        </param>
      </delegate>
      <function name="queryInterface" access="public" unsafe="true">
        <type native="SlangResult">int</type>
        <param name="uuid">
          <type>SlangUUID*</type>
        </param>
        <param name="outObject">
          <type>void**</type>
        </param>
        <body>
          <code>return Marshal.GetDelegateForFunctionPointer&lt;<delegate>_queryInterface</delegate>&gt;(lpVtbl-&gt;<vtbl explicit="True">queryInterface</vtbl>)(<param special="thisPtr">(ISlangProfiler*)Unsafe.AsPointer(ref this)</param>, <param name="uuid">uuid</param>, <param name="outObject">outObject</param>);</code>
        </body>
      </function>
      <function name="addRef" access="public" unsafe="true">
        <type native="uint32_t">uint</type>
        <body>
          <code>return Marshal.GetDelegateForFunctionPointer&lt;<delegate>_addRef</delegate>&gt;(lpVtbl-&gt;<vtbl explicit="True">addRef</vtbl>)(<param special="thisPtr">(ISlangProfiler*)Unsafe.AsPointer(ref this)</param>);</code>
        </body>
      </function>
      <function name="release" access="public" unsafe="true">
        <type native="uint32_t">uint</type>
        <body>
          <code>return Marshal.GetDelegateForFunctionPointer&lt;<delegate>_release</delegate>&gt;(lpVtbl-&gt;<vtbl explicit="True">release</vtbl>)(<param special="thisPtr">(ISlangProfiler*)Unsafe.AsPointer(ref this)</param>);</code>
        </body>
      </function>
      <function name="getEntryCount" access="public" unsafe="true">
        <type native="size_t">nuint</type>
        <body>
          <code>return Marshal.GetDelegateForFunctionPointer&lt;<delegate>_getEntryCount</delegate>&gt;(lpVtbl-&gt;<vtbl explicit="True">getEntryCount</vtbl>)(<param special="thisPtr">(ISlangProfiler*)Unsafe.AsPointer(ref this)</param>);</code>
        </body>
      </function>
      <function name="getEntryName" access="public" unsafe="true">
        <type native="const char *">sbyte*</type>
        <param name="index">
          <type>uint</type>
        </param>
        <body>
          <code>return Marshal.GetDelegateForFunctionPointer&lt;<delegate>_getEntryName</delegate>&gt;(lpVtbl-&gt;<vtbl explicit="True">getEntryName</vtbl>)(<param special="thisPtr">(ISlangProfiler*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>);</code>
        </body>
      </function>
      <function name="getEntryTimeMS" access="public" unsafe="true">
        <type native="long">nint</type>
        <param name="index">
          <type>uint</type>
        </param>
        <body>
          <code>return Marshal.GetDelegateForFunctionPointer&lt;<delegate>_getEntryTimeMS</delegate>&gt;(lpVtbl-&gt;<vtbl explicit="True">getEntryTimeMS</vtbl>)(<param special="thisPtr">(ISlangProfiler*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>);</code>
        </body>
      </function>
      <function name="getEntryInvocationTimes" access="public" unsafe="true">
        <type native="uint32_t">uint</type>
        <param name="index">
          <type>uint</type>
        </param>
        <body>
          <code>return Marshal.GetDelegateForFunctionPointer&lt;<delegate>_getEntryInvocationTimes</delegate>&gt;(lpVtbl-&gt;<vtbl explicit="True">getEntryInvocationTimes</vtbl>)(<param special="thisPtr">(ISlangProfiler*)Unsafe.AsPointer(ref this)</param>, <param name="index">index</param>);</code>
        </body>
      </function>
      <vtbl>
        <field name="queryInterface" access="public">
          <type native="SlangResult (const SlangUUID &amp;, void **)">IntPtr</type>
        </field>
        <field name="addRef" access="public">
          <type native="uint32_t ()">IntPtr</type>
        </field>
        <field name="release" access="public">
          <type native="uint32_t ()">IntPtr</type>
        </field>
        <field name="getEntryCount" access="public">
          <type native="size_t ()">IntPtr</type>
        </field>
        <field name="getEntryName" access="public">
          <type native="const char *(uint32_t)">IntPtr</type>
        </field>
        <field name="getEntryTimeMS" access="public">
          <type native="long (uint32_t)">IntPtr</type>
        </field>
        <field name="getEntryInvocationTimes" access="public">
          <type native="uint32_t (uint32_t)">IntPtr</type>
        </field>
      </vtbl>
    </struct>
  </namespace>
</bindings>
