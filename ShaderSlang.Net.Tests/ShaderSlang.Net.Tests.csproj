<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <IsPackable>false</IsPackable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <IsTestProject>true</IsTestProject>
    <Microsoft_Direct3D_DXC_CopyLocation>$(OutDir)</Microsoft_Direct3D_DXC_CopyLocation>
    <Microsoft_Direct3D_DXC_SkipLibraryCopy>false</Microsoft_Direct3D_DXC_SkipLibraryCopy>
    <Microsoft_Direct3D_DXC_SkipIncludeDir>true</Microsoft_Direct3D_DXC_SkipIncludeDir>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.Direct3D.DXC" GeneratePathProperty="True" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" />
    <PackageReference Include="OpenTelemetry.Exporter.Console" />
    <PackageReference Include="OpenTelemetry.Exporter.OpenTelemetryProtocol" />
    <PackageReference Include="Veldrid" />
    <PackageReference Include="Xunit.Microsoft.DependencyInjection" />
    <PackageReference Include="xunit.v3" />
    <PackageReference Include="xunit.runner.visualstudio" />
    <PackageReference Include="xunit.analyzers">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="coverlet.collector">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="JetBrains.Annotations" />
    <PackageReference Include="Microsoft.Extensions.Logging.Console" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\ShaderSlang.Net\ShaderSlang.Net.csproj" IncludeAssets="all" />
    <Content Include="Examples\Assets\hello-world.slang">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="Examples\Assets\shader-object.slang">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <PropertyGroup Condition="$([System.OperatingSystem]::IsWindows())">
    <PlatformTarget
      Condition=" '$(PlatformTarget)' == '' And '$([System.Runtime.InteropServices.RuntimeInformation]::ProcessArchitecture.ToString())' != '' "
      >$([System.Runtime.InteropServices.RuntimeInformation]::ProcessArchitecture.ToString().ToLower())</PlatformTarget
    >
  </PropertyGroup>
  <ImportGroup Condition="$([System.OperatingSystem]::IsWindows())">
    <Import
      Project="$(PkgMicrosoft_Direct3D_DXC)\build\native\Microsoft.Direct3D.DXC.props"
      Condition="Exists('$(PkgMicrosoft_Direct3D_DXC)\build\native\Microsoft.Direct3D.DXC.props')"
    />
    <Import
      Project="$(PkgMicrosoft_Direct3D_DXC)\build\native\Microsoft.Direct3D.DXC.targets"
      Condition="Exists('$(PkgMicrosoft_Direct3D_DXC)\build\native\Microsoft.Direct3D.DXC.targets')"
    />
  </ImportGroup>
</Project>
