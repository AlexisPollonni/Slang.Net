<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<bindings>
  <namespace name="ShaderSlang.Net.Bindings.Generated">
    <struct name="IDebugCallback" access="public" vtbl="true" unsafe="true">
      <field name="lpVtbl" access="public">
        <type>Vtbl*</type>
      </field>
      <delegate name="_handleMessage" access="public" convention="StdCall" unsafe="true">
        <type>void</type>
        <param name="pThis">
          <type>IDebugCallback*</type>
        </param>
        <param name="type">
          <type>DebugMessageType</type>
        </param>
        <param name="source">
          <type>DebugMessageSource</type>
        </param>
        <param name="message">
          <type>sbyte*</type>
        </param>
      </delegate>
      <function name="handleMessage" access="public" unsafe="true">
        <type>void</type>
        <param name="type">
          <type>DebugMessageType</type>
        </param>
        <param name="source">
          <type>DebugMessageSource</type>
        </param>
        <param name="message">
          <type>sbyte*</type>
        </param>
        <body>
          <code
            >Marshal.GetDelegateForFunctionPointer&lt;<delegate>_handleMessage</delegate>&gt;(lpVtbl-&gt;<vtbl
              explicit="True"
              >handleMessage</vtbl
            >)(<param special="thisPtr">(IDebugCallback*)Unsafe.AsPointer(ref this)</param>, <param
              name="type"
              >type</param
            >, <param name="source">source</param>, <param name="message">message</param>);</code
          >
        </body>
      </function>
      <vtbl>
        <field name="handleMessage" access="public">
          <type
            native="void (DebugMessageType, DebugMessageSource, const char *) __attribute__((nothrow)) __attribute__((stdcall))"
            >IntPtr</type
          >
        </field>
      </vtbl>
    </struct>
  </namespace>
</bindings>
